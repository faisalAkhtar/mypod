{"version":3,"sources":["component/SongEventHandler.jsx","service/youtube.js","helper/initialList.js","App.js","reportWebVitals.js","index.js"],"names":["SongEventHandler","componentDidMount","window","YT","loadVideo","tag","document","createElement","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","id","props","song","videoId","player","Player","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","onSongState","target","playVideo","onSongEvent","this","style","display","Component","baseTerms","part","maxResults","key","process","REACT_APP_API_KEY_YOUTUBE","axios","create","baseURL","list","App","state","inputTerm","searchedFor","songs","initialList","selectedSong","songEvent","songState","buffering","playingFlag","muteFlag","volume","currentPlaying","menuShown","handleSongEvent","c","setState","handleSongState","playerStatus","data","handleInputChange","value","handleSearchSong","a","preventDefault","toLowerCase","searchSong","handleVolume","parseInt","setVolume","handleMute","vol","handlePlay","pauseSong","resumeSong","console","log","snippet","title","alert","handleStop","stopSong","youtube","get","params","q","response","items","pauseVideo","prevSong","length","playSong","nextSong","toggleMenu","index","loadVideoById","stopVideo","thumbnails","channelTitle","imageURl","medium","url","className","onClick","backgroundImage","disabled","String","fromCharCode","bind","name","type","min","max","step","onChange","onSubmit","placeholder","autoFocus","map","unescape","rel","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68fc91f0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass SongEventHandler extends Component {\n    componentDidMount = () => {\n        // On mount, check to see if the API script is already loaded\n        if (!window.YT) {\n            // If not, load the script asynchronously\n            const tag = document.createElement(\"script\");\n            tag.src = \"https://www.youtube.com/iframe_api\";\n\n            // onYouTubeIframeAPIReady will load the video after the script is loaded\n            window.onYouTubeIframeAPIReady = this.loadVideo;\n\n            const firstScriptTag = document.getElementsByTagName(\"script\")[0];\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        } else {\n            // If script is already there, load the video directly\n            this.loadVideo();\n        }\n    };\n\n    loadVideo = () => {\n        const { song } = this.props;\n        const id = song.id.videoId;\n\n        // the Player object is created uniquely based on the id in props\n        this.player = new window.YT.Player(`youtube-player`, {\n            videoId: id,\n            events: {\n                onReady: this.onPlayerReady,\n                onStateChange: this.onPlayerStateChange,\n            },\n        });\n    };\n\n    onPlayerStateChange = (event) => {\n        this.props.onSongState(event)\n    };\n\n    onPlayerReady = (event) => {\n        event.target.playVideo();\n        this.props.onSongEvent(event);\n    };\n\n    render() {\n        const { song } = this.props;\n\n        if (!song) {\n            return <div>Loading ...</div>;\n        }\n\n        // const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\n        return (\n            <div>\n                <div style={{ display: \"none\" }}>\n                    {/* <iframe src={videoSrc} allowFullScreen title=\"Video player\" /> */}\n                    <div id={`youtube-player`}></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SongEventHandler;","import axios from \"axios\";\nconst KEY = process.env.REACT_APP_API_KEY_YOUTUBE;\n\nexport const baseTerms = {\n\tpart: \"snippet\",\n\tmaxResults: 5,\n\tkey: KEY,\n};\n\nexport default axios.create({\n\tbaseURL: \"https://www.googleapis.com/youtube/v3/\",\n});","const list =  [\n    {\n        \"id\": {\n            \"videoId\": \"H2f7MZaw3Yo\"\n        },\n        \"snippet\": {\n            \"title\": \"Samjhawan - Humpty Sharma Ki Dulhania | Varun Dhawan and Alia Bhatt - Arijit Singh, Shreya Ghoshal\",\n            \"thumbnails\": {\n                \"default\": {\n                    \"url\": \"https://i.ytimg.com/vi/6XGdeSKL6eE/default.jpg\",\n                },\n                \"medium\": {\n                    \"url\": \"https://i.ytimg.com/vi/6XGdeSKL6eE/mqdefault.jpg\",\n                },\n                \"high\": {\n                    \"url\": \"https://i.ytimg.com/vi/6XGdeSKL6eE/hqdefault.jpg\",\n                }\n            },\n            \"channelTitle\": \"Dharma Productions\"\n        }\n    },\n    {\n        \"id\": {\n            \"videoId\": \"tjXKmiCzIXM\"\n        },\n        \"snippet\": {\n            \"title\": \"Tera Hone Laga Hoon Full Song Video - Ajab Prem Ki Ghazab Kahani | Atif & Alisha Chinai | Pritam\",\n            \"thumbnails\": {\n                \"default\": {\n                    \"url\": \"https://i.ytimg.com/vi/useznoRhrWU/default.jpg\",\n                },\n                \"medium\": {\n                    \"url\": \"https://i.ytimg.com/vi/useznoRhrWU/mqdefault.jpg\",\n                },\n                \"high\": {\n                    \"url\": \"https://i.ytimg.com/vi/useznoRhrWU/hqdefault.jpg\",\n                }\n            },\n            \"channelTitle\": \"Tips Official\",\n        }\n    },\n    {\n        \"id\": {\n            \"videoId\": \"4rdby1KcCek\"\n        },\n        \"snippet\": {\n            \"title\": \"Bolna - Kapoor & Sons | Sidharth Malhotra | Alia Bhatt | Fawad Khan | Arijit Singh | Asees | Tanishk\",\n            \"thumbnails\": {\n                \"default\": {\n                    \"url\": \"https://i.ytimg.com/vi/4rdby1KcCek/default.jpg\",\n                },\n                \"medium\": {\n                    \"url\": \"https://i.ytimg.com/vi/4rdby1KcCek/mqdefault.jpg\",\n                },\n                \"high\": {\n                    \"url\": \"https://i.ytimg.com/vi/4rdby1KcCek/hqdefault.jpg\",\n                }\n            },\n            \"channelTitle\": \"Sony Music India\",\n        }\n    },\n    {\n        \"id\": {\n            \"videoId\": \"q8rvU5JLXOc\"\n        },\n        \"snippet\": {\n            \"title\": \"Heartquake Lyrical Song | Karwaan | Irrfan Khan, Dulquer Salmaan, Mithila Palkar | Papon\",\n            \"thumbnails\": {\n                \"default\": {\n                    \"url\": \"https://i.ytimg.com/vi/a4NGZFMhEUY/default.jpg\",\n                },\n                \"medium\": {\n                    \"url\": \"https://i.ytimg.com/vi/a4NGZFMhEUY/mqdefault.jpg\",\n                },\n                \"high\": {\n                    \"url\": \"https://i.ytimg.com/vi/a4NGZFMhEUY/hqdefault.jpg\",\n                }\n            },\n            \"channelTitle\": \"T-Series\",\n        }\n    },\n    {\n        \"id\": {\n            \"videoId\": \"5qIJ7tQ2QbM\"\n        },\n        \"snippet\": {\n            \"title\": \"Kinna Sona Full AUDIO Song - Sunil Kamath | Bhaag Johnny | Kunal Khemu | T-Series\",\n            \"thumbnails\": {\n                \"default\": {\n                    \"url\": \"https://i.ytimg.com/vi/5qIJ7tQ2QbM/default.jpg\",\n                },\n                \"medium\": {\n                    \"url\": \"https://i.ytimg.com/vi/5qIJ7tQ2QbM/mqdefault.jpg\",\n                },\n                \"high\": {\n                    \"url\": \"https://i.ytimg.com/vi/5qIJ7tQ2QbM/hqdefault.jpg\",\n                }\n            },\n            \"channelTitle\": \"T-Series\",\n        }\n    }\n]\n\nexport default list;","import React, { Component } from \"react\";\nimport './App.css';\n\nimport SongEventHandler from \"./component/SongEventHandler\"\n\nimport youtube, { baseTerms } from \"./service/youtube\";\nimport initialList from \"./helper/initialList\";\n\nclass App extends Component {\n\tstate = {\n\t\tinputTerm: \"\",\n\t\tsearchedFor: \"\",\n\t\tsongs: initialList,\n\t\tselectedSong: null,\n\t\tsongEvent: null,\n\t\tsongState: null,\n\t\tbuffering: true,\n\t\tplayingFlag: false,\n\t\tmuteFlag: false,\n\t\tvolume: 100,\n\t\tcurrentPlaying: -1,\n\t\tmenuShown : false,\n\t}\n\n\thandleSongEvent = (c) => {\n\t\tthis.setState({\n\t\t\tsongEvent: c\n\t\t})\n\t}\n\n\thandleSongState = (event) => {\n\t\tlet playerStatus = event.data,\n\t\t\t{ playingFlag, buffering, currentPlaying } = this.state\n\n\t\tif (playerStatus === -1) { // unstarted\n\t\t} else if (playerStatus === 0) { // ended\n\t\t\tcurrentPlaying = -1\n\t\t\tplayingFlag = false\n\t\t\tbuffering = true\n\t\t} else if (playerStatus === 1) { // playing\n\t\t\tplayingFlag = true\n\t\t\tbuffering = false\n\t\t} else if (playerStatus === 2) { // paused\n\t\t\tplayingFlag = false\n\t\t\tbuffering = false\n\t\t} else if (playerStatus === 3) { // buffering\n\t\t\tbuffering = true\n\t\t} else if (playerStatus === 5) { // video cued\n\t\t}\n\n\t\tthis.setState({\n\t\t\tsongState: event,\n\t\t\tplayingFlag,\n\t\t\tbuffering,\n\t\t\tcurrentPlaying\n\t\t})\n\t}\n\n\thandleInputChange = (event) => {\n\t\tthis.setState({\n\t\t\tinputTerm: event.target.value,\n\t\t});\n\t};\n\n\thandleSearchSong = async (event) => {\n\t\tevent.preventDefault()\n\n\t\tlet songs = [...this.state.songs],\n\t\t\tinputTerm = this.state.inputTerm.toLowerCase(),\n\t\t\tsearchedFor = this.state.searchedFor\n\n\t\tif (inputTerm !== \"\") {\n\t\t\tsongs = await this.searchSong(inputTerm)\n\t\t\tsearchedFor = inputTerm\n\t\t}\n\n\t\tthis.setState({\n\t\t\tinputTerm: \"\",\n\t\t\tsongs,\n\t\t\tsearchedFor,\n\t\t\tcurrentPlaying: -1,\n\t\t});\n\t};\n\n\thandleVolume = async (event) => {\n\t\tthis.setState({ volume: parseInt(event.target.value) })\n\t\tconst { songEvent } = this.state;\n\t\tif (songEvent != null) {\n\t\t\tsongEvent.target.setVolume(parseInt(event.target.value))\n\t\t}\n\t}\n\n\thandleMute = (vol) => {\n\t\tthis.setState({ volume: vol })\n\t\tconst { songEvent } = this.state;\n\t\tif (songEvent != null) {\n\t\t\tsongEvent.target.setVolume(parseInt(vol))\n\t\t}\n\t}\n\n\thandlePlay = async (event) => {\n\t\tevent.preventDefault()\n\t\tlet playingFlag = this.state.playingFlag,\n\t\t\tselectedSong = this.state.selectedSong\n\n\t\tplayingFlag ?\n\t\t\tthis.pauseSong() :\n\t\t\t(this.resumeSong() ?\n\t\t\t\tconsole.log(`Resuming ${selectedSong.snippet.title}`) :\n\t\t\t\talert(\"No music on the list\"))\n\t}\n\n\thandleStop = async (event) => {\n\t\tevent.preventDefault()\n\t\tthis.stopSong() ?\n\t\t\tthis.setState({ selectedSong: null, songEvent: null, playingFlag: false, currentPlaying: -1 }) :\n\t\t\talert(\"No music to stop\")\n\t}\n\n\tsearchSong = async (inputTerm) => {\n\t\tconst response = await youtube.get(\"/search\", {\n\t\t\tparams: {\n\t\t\t\t...baseTerms,\n\t\t\t\tq: inputTerm,\n\t\t\t},\n\t\t});\n\t\treturn response.data.items;\n\t}\n\n\tpauseSong = () => {\n\t\tconst { songEvent } = this.state;\n\t\tif (songEvent != null) {\n\t\t\tsongEvent.target.pauseVideo()\n\t\t\tthis.setState({\n\t\t\t\tplayingFlag: false\n\t\t\t})\n\t\t}\n\t}\n\n\tresumeSong = () => {\n\t\tconst { songEvent } = this.state;\n\t\tif (songEvent != null) {\n\t\t\tsongEvent.target.playVideo()\n\t\t\tthis.setState({ playingFlag: true })\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tstopSong() {\n\t\tconst { songEvent } = this.state\n\t\tif (songEvent != null) {\n\t\t\tsongEvent.target.stopVideo()\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tprevSong = () => {\n\t\tlet { songs, currentPlaying } = this.state\n\t\tif (currentPlaying !== -1) {\n\t\t\tcurrentPlaying = currentPlaying === 0 ? songs.length - 1 : currentPlaying - 1\n\t\t\tthis.playSong(currentPlaying)\n\t\t\tthis.setState({\n\t\t\t\tcurrentPlaying,\n\t\t\t})\n\t\t}\n\t}\n\n\tnextSong = () => {\n\t\tlet { songs, currentPlaying } = this.state\n\t\tif (currentPlaying !== -1) {\n\t\t\tcurrentPlaying = (currentPlaying + 1) % songs.length\n\t\t\tthis.playSong(currentPlaying)\n\t\t\tthis.setState({\n\t\t\t\tcurrentPlaying,\n\t\t\t})\n\t\t}\n\t}\n\n\ttoggleMenu = () => {\n\t\tlet { menuShown } = this.state\n\t\tmenuShown = !menuShown\n\t\tthis.setState({\n\t\t\tmenuShown\n\t\t})\n\t}\n\n\n\tplaySong = (index) => {\n\t\tlet selectedSong = { ...this.state.selectedSong };\n\t\tlet songs = [...this.state.songs];\n\t\tconst songEvent = this.state.songEvent;\n\n\t\tselectedSong = { ...songs[index] }\n\t\tif (songEvent != null) {\n\t\t\tsongEvent.target.loadVideoById(selectedSong.id.videoId)\n\t\t}\n\n\t\tthis.setState({\n\t\t\tselectedSong,\n\t\t\tsongs,\n\t\t\tplayingFlag: true,\n\t\t\tcurrentPlaying: index,\n\t\t\t// volume: songEvent.target.getVolume()\n\t\t});\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tinputTerm,\n\t\t\tsongs,\n\t\t\tselectedSong,\n\t\t\tplayingFlag,\n\t\t\tbuffering,\n\t\t\tvolume,\n\t\t\tsongEvent,\n\t\t\tsearchedFor,\n\t\t\tcurrentPlaying,\n\t\t\tmenuShown\n\t\t} = this.state;\n\n\t\tconst {\n\t\t\ttitle,\n\t\t\tthumbnails,\n\t\t\tchannelTitle,\n\t\t} = selectedSong != null ? selectedSong.snippet : {};\n\t\tconst imageURl = selectedSong != null ? thumbnails.medium.url : \"\";\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className={menuShown ? \"menu shown\" : \"menu\"} onClick={this.toggleMenu}>\n\t\t\t\t\t<div></div>\n\t\t\t\t\t<div></div>\n\t\t\t\t\t<div></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"player\">\n\t\t\t\t\t<div className=\"banner\">\n\t\t\t\t\t\t<div className=\"widthNormaliser\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={buffering ? \"buffering albumCover\" : \"albumCover\"}\n\t\t\t\t\t\t\t\tstyle={{ backgroundImage: \"url(\" + imageURl + \"), url('https://avatars.githubusercontent.com/u/41644472?v=4')\" }}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t<div className=\"information\">\n\t\t\t\t\t\t\t\t<div className={buffering ? \"buffering title\" : \"title\"}>{selectedSong ? title : \"MyPod\"}</div>\n\t\t\t\t\t\t\t\t<div className={buffering ? \"buffering publisher\" : \"publisher\"}>{selectedSong ? \"by \" + channelTitle : \"by Faisal\"}</div>\n\t\t\t\t\t\t\t\t{selectedSong != null && (\n\t\t\t\t\t\t\t\t\t<SongEventHandler\n\t\t\t\t\t\t\t\t\t\tsong={selectedSong}\n\t\t\t\t\t\t\t\t\t\tonSongEvent={(c) => this.handleSongEvent(c)}\n\t\t\t\t\t\t\t\t\t\tonSongState={(c) => this.handleSongState(c)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tdisabled={songEvent == null}\n\t\t\t\t\t\t\t\t\t\tonClick={this.prevSong}\n\t\t\t\t\t\t\t\t\t>&#x23EE;\n\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tdisabled={songEvent == null}\n\t\t\t\t\t\t\t\t\t\tonClick={this.handlePlay}\n\t\t\t\t\t\t\t\t\t>{playingFlag ? String.fromCharCode(\"0x23F8\") : \"▶️\"}\n\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tdisabled={songEvent == null}\n\t\t\t\t\t\t\t\t\t\tonClick={this.nextSong}\n\t\t\t\t\t\t\t\t\t>&#x23ED;\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"volumeControls\">\n\t\t\t\t\t\t<div className=\"widthNormaliser\">\n\t\t\t\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdisabled={songEvent == null}\n\t\t\t\t\t\t\t\t\tonClick={this.handleMute.bind(this, 0)}\n\t\t\t\t\t\t\t\t>🔈</button>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tdisabled={songEvent == null}\n\t\t\t\t\t\t\t\t\tname=\"command-input\"\n\t\t\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\t\t\tmin=\"1\" max=\"100\" step=\"5\"\n\t\t\t\t\t\t\t\t\tvalue={volume}\n\t\t\t\t\t\t\t\t\tonChange={this.handleVolume}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tdisabled={songEvent == null}\n\t\t\t\t\t\t\t\t\tonClick={this.handleMute.bind(this, 100)}\n\t\t\t\t\t\t\t\t>🔊</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={menuShown ? \"songsArea shown\" : \"songsArea\"}>\n\t\t\t\t\t<div className=\"widthNormaliser\">\n\t\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t\t<div>{searchedFor === \"\" ? String.fromCharCode(\"nbsp\") : \"Results for: \" + searchedFor}</div>\n\t\t\t\t\t\t\t<form onSubmit={this.handleSearchSong}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\tvalue={inputTerm}\n\t\t\t\t\t\t\t\t\tname=\"command-input\"\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search for any song here\"\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tvalue=\"Search\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{songs.map((song, index) => (\n\t\t\t\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\tonClick={this.playSong.bind(this, index)}\n\t\t\t\t\t\t\t\t\t\tclassName={`${currentPlaying === index ? \"playing\" : \"\"}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<td>&#x25B6;</td>\n\t\t\t\t\t\t\t\t\t\t<td>{index + 1}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{unescape(song.snippet.title)}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{song.snippet.channelTitle}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<footer>Made with &#x2764; by <a target=\"_blank\" rel=\"noreferrer\" href=\"https://faisalakhtar.github.io/\">Faisal</a></footer>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}